services:
  app:
    image: php:8.3-fpm
    build:
      context: docker/php
      dockerfile: Dockerfile
    volumes:
      - .:/var/www/html
    working_dir: /var/www/html
    user: "1000"
    depends_on:
      - database
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}?serverVersion=16&charset=utf8
    command: php -S 0.0.0.0:8888 -t public
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "8888:8888"
    networks:
      - local
  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    ports:
      - "5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    networks:
      - local
  ###< doctrine/doctrine-bundle ###
  composer:
    image: composer:latest
    volumes:
      - .:/app
    working_dir: /app
    user: "1000"
    command: composer install --ignore-platform-reqs
    depends_on:
      - app

  buggregator:
    container_name: ms-buggregator
    image: ghcr.io/buggregator/server:latest
    restart: on-failure
    ports:
      - "8000:8000"
      - "9912:9912"
      - "9913:9913"
      - "1025:1025"
    networks:
      - local

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

networks:
  local:
    ipam:
      driver: default
      config:
        - subnet: 172.0.13.0/24
